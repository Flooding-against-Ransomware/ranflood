name: Build releases

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'

jobs:
  create_release:
    name: create_release
    runs-on: [ubuntu-latest]
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
      - name: Use tag
        run: echo ${{steps.tag.outputs.tag}}
      - name: Check out code
        uses: actions/checkout@v1
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false

  build_and_upload:
    needs: [create_release]
    name: build and upload
    
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    runs-on : ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Add SDK when building under Windows
        if: runner.os == 'Windows'
        run: |
          choco install visualstudio2019-workload-vctools
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
        shell: cmd
      
      - name: Build client
        run: ./gradlew clientNativeImage
      
      - name: Build daemon
        run: ./gradlew daemonNativeImage
      
      - name: Package executables
        id: package-executables
        run: |
          zip --junk-paths ranflood.zip ./build/graal/*
      
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./ranflood.zip
          asset_name: ranflood-${{ needs.create_release.outputs.tag }}_${{ runner.os }}.zip
          asset_content_type: application/zip
